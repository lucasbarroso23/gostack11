[{"/home/suporte/Documentos/gostack11/gobarber-web/src/App.tsx":"1","/home/suporte/Documentos/gostack11/gobarber-web/src/pages/Signin/index.tsx":"2","/home/suporte/Documentos/gostack11/gobarber-web/src/pages/Signin/styles.ts":"3","/home/suporte/Documentos/gostack11/gobarber-web/src/components/Input/index.tsx":"4","/home/suporte/Documentos/gostack11/gobarber-web/src/components/Button/index.tsx":"5","/home/suporte/Documentos/gostack11/gobarber-web/src/components/Input/styles.ts":"6","/home/suporte/Documentos/gostack11/gobarber-web/src/components/Button/styles.ts":"7","/home/suporte/Documentos/gostack11/gobarber-web/src/pages/Signup/index.tsx":"8","/home/suporte/Documentos/gostack11/gobarber-web/src/pages/Signup/styles.ts":"9","/home/suporte/Documentos/gostack11/gobarber-web/src/utils/getValidationErrors.ts":"10","/home/suporte/Documentos/gostack11/gobarber-web/src/components/Tooltip/styles.ts":"11","/home/suporte/Documentos/gostack11/gobarber-web/src/components/Tooltip/index.tsx":"12","/home/suporte/Documentos/gostack11/gobarber-web/src/services/apiClient.ts":"13","/home/suporte/Documentos/gostack11/gobarber-web/src/hooks/AuthContext.tsx":"14"},{"size":345,"mtime":1611185174033,"results":"15","hashOfConfig":"16"},{"size":2113,"mtime":1611188841425,"results":"17","hashOfConfig":"16"},{"size":1150,"mtime":1611102099284,"results":"18","hashOfConfig":"16"},{"size":1689,"mtime":1611146889094,"results":"19","hashOfConfig":"16"},{"size":316,"mtime":1611101373543,"results":"20","hashOfConfig":"16"},{"size":1110,"mtime":1611147641442,"results":"21","hashOfConfig":"16"},{"size":381,"mtime":1611102118628,"results":"22","hashOfConfig":"16"},{"size":1905,"mtime":1611114936557,"results":"23","hashOfConfig":"16"},{"size":1150,"mtime":1611102544835,"results":"24","hashOfConfig":"16"},{"size":352,"mtime":1611114786867,"results":"25","hashOfConfig":"16"},{"size":823,"mtime":1611147788186,"results":"26","hashOfConfig":"16"},{"size":355,"mtime":1611146877262,"results":"27","hashOfConfig":"16"},{"size":116,"mtime":1611185886112,"results":"28","hashOfConfig":"16"},{"size":1836,"mtime":1611188764575,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hj3o58",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/suporte/Documentos/gostack11/gobarber-web/src/App.tsx",[],"/home/suporte/Documentos/gostack11/gobarber-web/src/pages/Signin/index.tsx",["59"],"/home/suporte/Documentos/gostack11/gobarber-web/src/pages/Signin/styles.ts",[],"/home/suporte/Documentos/gostack11/gobarber-web/src/components/Input/index.tsx",["60"],"import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    // if (inputRef.current?.value) {\n    //   setIsField(true);\n    // } else {\n    //   setIsField(false);\n    // }\n    // esse código é a mesma coisa desse de cima\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        ref={inputRef}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/suporte/Documentos/gostack11/gobarber-web/src/components/Button/index.tsx",[],"/home/suporte/Documentos/gostack11/gobarber-web/src/components/Input/styles.ts",[],"/home/suporte/Documentos/gostack11/gobarber-web/src/components/Button/styles.ts",[],"/home/suporte/Documentos/gostack11/gobarber-web/src/pages/Signup/index.tsx",["61"],"/home/suporte/Documentos/gostack11/gobarber-web/src/pages/Signup/styles.ts",[],"/home/suporte/Documentos/gostack11/gobarber-web/src/utils/getValidationErrors.ts",[],"/home/suporte/Documentos/gostack11/gobarber-web/src/components/Tooltip/styles.ts",[],"/home/suporte/Documentos/gostack11/gobarber-web/src/components/Tooltip/index.tsx",[],"/home/suporte/Documentos/gostack11/gobarber-web/src/services/apiClient.ts",[],"/home/suporte/Documentos/gostack11/gobarber-web/src/hooks/AuthContext.tsx",[],{"ruleId":"62","severity":1,"message":"63","line":48,"column":9,"nodeType":"64","messageId":"65","endLine":48,"endColumn":20},{"ruleId":"66","severity":1,"message":"67","line":24,"column":22,"nodeType":"68","messageId":"69","endLine":24,"endColumn":34},{"ruleId":"62","severity":1,"message":"63","line":34,"column":7,"nodeType":"64","messageId":"65","endLine":34,"endColumn":18},"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unused-vars","'defaultValue' is assigned a value but never used.","Identifier","unusedVar"]